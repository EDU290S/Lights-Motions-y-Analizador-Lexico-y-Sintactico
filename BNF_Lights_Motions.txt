-------------------------------- BNF ORDENADO --------------------------------

<Lenguaje> ::= <Bloque codigo> | <Bloque codigo><Lenguaje>

<Bloque codigo> ::= <Instruccion> | <Ciclo> | <Decision> | <Funcion>

<Instruccion> ::= <Definir variable> | <Editar variable> | <Retraso> | <Aritmetica> | <Escribir> | <IngresarValor>

<Definir variable> ::= <Definir Entero> | <Definir Flotante> | <Definir Cadena> | <Definir Reflector> | <Definir Fuente>

<Definir Entero> ::= int <Variable>; | int <Variable> = <Entero>; | int <Variable> = <Aritmetica>;

<Entero> ::= <Numero> | -<Numero>

<Numero> ::= <Digito> | <Digito>

<Digito> ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9

<Definir Flotante> ::= float <Variable>; | float <Variable> = <Flotante>; | float <Variable> = <Aritmetica>;

<Flotante> ::= <Entero> | <Entero>.<Numero>

<Aritmetica> ::= <Operacion> | <Operacion><Adicional> 

<Operacion> ::= <Operando> <Operador Aritmetico> <Operando>

<Operando> ::= <Variable> | <Entero> | <Flotante>

<Operador Aritmetico> ::= - | / | * | +

<Adicional> ::= <<Operador Aritmetico> <Operando> | <Aritmetica>

<Definir Cadena> ::= String <Variable>; | String <Variable> = <Texto>;

<Variable> ::= <Letra> | <Letra><Variable>

<Letra> ::= <Mayuscula> | <Minuscula> 

<Mayuscula> ::= A|B|C|D|E|F|G|H|I|J|K|L|M|N|Ñ|O|P|Q|R||S|T|U|V|W|X|Y|Z

<Minuscula> ::= a|b|c|d|e|f|g|h|i|j|k|l|m|n|ñ|o|p|q|r|s|t|u|v|w|x|y|z

<Texto> ::= "<Imprimible>"

<Imprimible> ::= <Caracter>[<Imprimible>]

<Caracter> ::= [ ...~]

<Definir Reflector> ::= Light <Variable>;

<Definir Fuente> ::= Waterjet <Variable>;

<Editar variable> ::= <Editar Entero> | <Editar Flotante> | <Editar Cadena> | <Editar Reflector> | <Editar Fuente> 

<Editar Entero> ::= <Variable> = <Entero>; | <Variable>++; | <Variable>--; | <Variable> = <Aritmetica>;

<Editar Flotante> ::= <Variable> = <Flotante>; | <Variable> = <Aritmetica>;

<Editar Cadena> ::= <Variable> = <Texto>; 

<Editar Reflector> ::= <Editar Identificador> | <Editar Intensidad> | <Editar Color> | <Editar Angulo> | <Editar Estado>

<Editar Intensidad> ::= <Variable>.intensity( <Valor> );

<Valor> ::= <Variable> | <Entero> | <Flotante> | <Aritmetica>;

<Editar Color> ::= <Usar Color> | <Declarar Color>

<Usar Color> ::= <Variable>.useColor( <Entero> ); | <Variable>.useColor( <Variable> ); 

<Declarar Color> ::= <Variable>.declareColor(<Colores>);

<Colores> ::= <Cadena> | <Cadena>, <Colores>

<Cadena> ::= <Letra> | <Letra><Cadena>

<Editar Fuente> ::= <Editar Identificador> | <Editar Presion> | <Editar Angulo> | <Editar Estado>

<Editar Estado> ::= <Variable>.on(); | <Variable>.off();

<Editar Presion> ::= <Variable>.pressure( <Valor> ); 

<Editar Identificador> ::= <Variable>.id( <Entero> ); | <Variable>.id( <Variable> );

<Editar Angulo> ::= <Variable>.angle( <Valor> ); 

<Retraso> ::= Delay <Entero>; | Delay <Variable>;

<Escribir> ::= writeLn( <Imprimir> );

<Imprimir> :: <Variable> | <Entero> | <Flotante> | <Texto>

<IngresarValor> ::= scribe(<Variable>);

<Ciclo> ::= <For> | <While>

<For> ::= for <Variable> range [ <Entero> ] { <Lenguaje> };

<While> ::= while ( <Condicion> ){ <Lenguaje> };   

<Condicion> ::= <OperandoCondicion> <OperadorLogico> <OperandoCondicion>

<OperandoCondicion> ::= <Operando> | <Aritmetica> | <Texto>

<OperadorLogico> ::= == | =! | < | > | <= | >=

<Decision> ::= If ( <Condicion> ){ <Lenguaje> } | If ( <Condicion> ){ <Lenguaje> }<Complemento If>;

<Complemento IF> ::= <Else If> | <Else If><Complemento IF>  | <Else>

<Else If> ::= else if ( <Condicion> ){ <Lenguaje> }

<Else> ::= else { <Lenguaje> }

<Funcion> ::= <Definir funcion> | <Llamar funcion>

<Definir funcion> ::= <Funcion con retorno> | <Funcion sin retorno>

<Llamar funcion> ::= <Variable> ( <Parametros> ); | <Asignar a> <Variable>( <Parametros> ); | <Variable> (); | <Asignar a> <Variable>(); 

<Asignar a> ::= <Variable> = | <Type> <Variable> = 

<Parametros> ::= <Parametro> | <Parametro>, <Parametro>

<Parametro> ::= <Variable> | <Entero> | <Flotante> | <Texto>

<Funcion con retorno> ::= funtion <Type> <Variable> ( <Definir Parametros> ) { <Lenguaje> return <Retorno>; }; | funtion <Type> <Variable> () { <Lenguaje> return <Retorno>; };

<Type> ::= int | String | float | light | waterjet 

<Funcion sin retorno> ::= funtion void <Variable> ( <Definir Parametros> ) { <Lenguaje> }; | Funtion void <Variable> () { <Lenguaje> };

<Retorno> ::= <Variable> | <Numero> | <Texto> | <Cadena> | <Aritmetica>

<Definir Parametros> :: <Definir variable> | <Definir variable>, <Definir Parametros>